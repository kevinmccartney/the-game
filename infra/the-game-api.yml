swagger: '2.0'
info:
  title: The Game API
  description: Web services for The Game
  version: 0.1.0
host: the-game.kevinmccartney.is # TODO: this will need to be parameterized for other envs
schemes: [https]
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/ping:
    get:
      operationId: ping-get
      summary: Returns pong.
      x-google-backend:
        address: https://us-central1-the-game-388502.cloudfunctions.net/the-game-ping
      responses:
        '200':
          description: Just pong.
          schema:
            type: string
  /v1/users:
    get:
      operationId: users-get-all
      summary: Get all users.
      x-google-backend:
        address: https://us-central1-the-game-388502.cloudfunctions.net/the-game-users-get-all
      responses:
        # TODO: add error codes
        '200':
          description: A list of User object.
          schema:
            type: object
            properties:
              response:
                type: array
                items:
                  $ref: '#/definitions/User'
    options:
      operationId: users-options
      summary: CORS for the Users resource.
      security: []
      x-google-backend:
        address: https://us-central1-the-game-388502.cloudfunctions.net/the-game-user-scores-options
      responses:
        '200':
          $ref: '#/responses/CORSSuccess'
  /v1/users/{userId}:
    parameters:
      - in: path
        name: userId
        type: string
        required: true
        description: UID of the user.
    get:
      operationId: users-get
      summary: Get all users.
      x-google-backend:
        address: https://us-central1-the-game-388502.cloudfunctions.net/the-game-users-get-all
      responses:
        # TODO: add error codes
        '200':
          description: A User object.
          schema:
            type: object
            properties:
              response:
                $ref: '#/definitions/User'
    options:
      operationId: users-get-options
      summary: CORS for the user scores resource
      security: []
      x-google-backend:
        address: https://us-central1-the-game-388502.cloudfunctions.net/the-game-user-scores-options
      responses:
        '200':
          $ref: '#/responses/CORSSuccess'
  /v1/users/{userId}/points:
    parameters:
      - in: path
        name: userId
        type: string
        required: true
        description: UID of the user the points belong to.
    post:
      operationId: user-points-post
      summary: Assign points to a user.
      x-google-backend:
        address: https://us-central1-the-game-388502.cloudfunctions.net/the-game-user-points-post
      parameters:
        - in: body
          name: point_post_request
          description: The point to create
          schema:
            type: object
            required:
              - reason
              - points
            properties:
              points:
                type: integer
              reason:
                type: string
      responses:
        # TODO: add error codes
        '201':
          description: Created.
    get:
      operationId: user-points-get
      summary: Get points for a user.
      x-google-backend:
        address: https://us-central1-the-game-388502.cloudfunctions.net/the-game-user-points-get
      responses:
        # TODO: add error codes
        '200':
          description: Just pong.
          schema:
            type: object
            properties:
              created_time:
                type: string
              id:
                type: string
              points:
                type: integer
              reason:
                type: string
              subject:
                type: string
              created_by:
                $ref: '#/definitions/User'

    options:
      operationId: user-points-options
      summary: CORS for the user points resource
      security: []
      x-google-backend:
        address: https://us-central1-the-game-388502.cloudfunctions.net/the-game-user-points-options
      responses:
        '200':
          $ref: '#/responses/CORSSuccess'
  /v1/users/{userId}/scores:
    parameters:
      - in: path
        name: userId
        type: string
        required: true
        description: UID of the user the scores belong to.
    get:
      operationId: user-scores-get
      summary: Get scores for a user.
      x-google-backend:
        address: https://us-central1-the-game-388502.cloudfunctions.net/the-game-user-scores-get
      responses:
        # TODO: add error codes
        '200':
          description: Just pong.
          schema:
            type: object
            properties:
              points:
                type: integer
    options:
      operationId: user-get-scores-options
      summary: CORS for the user scores resource
      security: []
      x-google-backend:
        address: https://us-central1-the-game-388502.cloudfunctions.net/the-game-user-scores-options
      responses:
        '200':
          $ref: '#/responses/CORSSuccess'
security:
  - firebase: []
securityDefinitions:
  firebase:
    authorizationUrl: ''
    flow: 'implicit'
    type: 'oauth2'
    # Replace YOUR-PROJECT-ID with your project ID
    x-google-issuer: 'https://securetoken.google.com/the-game-388502'
    x-google-jwks_uri: 'https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com'
    x-google-audiences: 'the-game-388502'
responses:
  CORSSuccess:
    description: CORS headers.
    headers:
      Access-Control-Allow-Origin:
        type: string
        description: Allowed requester origin
      Access-Control-Allow-Methods:
        type: string
        description: Methods allowed on resource
      Access-Control-Allow-Headers:
        type: string
        description: Headers allowed on resource
      Access-Control-Max-Age:
        type: string
        description: How long to cache the results of a preflight request
definitions:
  User:
    type: object
    properties:
      display_name:
        type: string
      email:
        type: string
      phone_number:
        type: string
      photo_url:
        type: string
      uid:
        type: string
