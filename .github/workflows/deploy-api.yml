name: 'Deploy API'

on:
  workflow_dispatch:
  push:
    paths:
      - projects/api/**/*
      - .github/workflows/deploy-api.yml
    branches:
      - main
      - develop

permissions:
  contents: read

jobs:
  find-changes:
    runs-on: ubuntu-latest
    outputs:
      changedApiProjects: ${{ steps.findChanges.outputs.changedApiProjects }}
      hasChanged: ${{ steps.hasChanged.outputs.hasChanged }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      # each
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install --deploy --dev

      - name: Git diff
        env:
          THE_GAME_API_PROJECTS: ${{ vars.THE_GAME_API_PROJECTS }}
        run: git diff --name-only HEAD HEAD~1

      - name: Print changes
        env:
          THE_GAME_API_PROJECTS: ${{ vars.THE_GAME_API_PROJECTS }}
        run: pipenv run python bin/find-changed-api-projects

      - name: Find changes
        id: findChanges
        env:
          THE_GAME_API_PROJECTS: ${{ vars.THE_GAME_API_PROJECTS }}
        run: |
          pipenv run python bin/find-changed-api-projects 
          cat the-game-changed-api-projects.json
          echo "changedApiProjects=$(cat the-game-changed-api-projects.json | jq -c '.["changes"]' )" >> "$GITHUB_OUTPUT"
      - name: Has changed
        id: hasChanged
        env:
          THE_GAME_API_PROJECTS: ${{ vars.THE_GAME_API_PROJECTS }}
        run: |
          changed_projects=$(cat the-game-changed-api-projects.json)
          hasChanged=$(pipenv run python bin/has-changed-api-projects ${changed_projects})
          echo $hasChanged
          echo "hasChanged=${hasChanged}" >> "$GITHUB_OUTPUT"

  deploy_cloud_function:
    needs: find-changes
    if: ${{ needs.find-changes.outputs.changedApiProjects != '[]' && needs.find-changes.outputs.changedApiProjects != '' }}
    strategy:
      matrix:
        function: ${{ fromJson(needs.find-changes.outputs.changedApiProjects) }}
      fail-fast: false
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: projects/api
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      # each
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install --deploy --dev

      - name: Generate requirements.txt
        run: pipenv requirements > requirements.txt

      - name: Make deployment dir
        run: |
          mkdir ${{ matrix.function }} && \
          mv requirements.txt ${{ matrix.function }} && \
          mv the_game_api/${{ matrix.function }}.py ${{ matrix.function }}/main.py

      - name: Zip deployment package
        run: |
          pwd
          ls -la
          echo ${{ matrix.function }}
          cd ${{ matrix.function }}
          pwd
          ls -la
          zip function-source.zip main.py requirements.txt
          ls -la
          mkdir temp && mv function-source.zip temp && cd temp
          unzip function-source.zip
          ls -la
          pwd

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Upload CF source
        run: |
          pwd
          ls -la
          echo {{ matrix.function }}
          cf_name=$(echo ${{ matrix.function }} | tr '_' '-')
          gsutil cp ${{ matrix.function }}/function-source.zip gs://gcf-v2-sources-181007178788-us-central1/${cf_name}

      - name: Deploy Cloud Function
        run: |
          cf_name=$(echo ${{ matrix.function }} | tr '_' '-')
          gcloud functions deploy the-game-${cf_name}
